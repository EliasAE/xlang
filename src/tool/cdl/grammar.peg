# Parsing Expression Grammars homepage: http://bford.info/packrat/
# PEG VSCode Extension: https://marketplace.visualstudio.com/items?itemName=theaustinseven.pegs
# MIDL3 Docs: https://docs.microsoft.com/en-us/uwp/midl-3/

# Note, this grammar is incomplete

# Hierarchical syntax

Grammar <- Spacing Namespace+ EndOfFile
Namespace <- NAMESPACE DottedIdentifier OPEN_CURLY (Namespace / TypeDefinition)* CLOSE_CURLY

TypeDefinition <- Attribute / Delegate / Enum / Interface / RuntimeClass / Struct

Attribute <- ATTRIBUTE Identifier OPEN_CURLY CLOSE_CURLY
Delegate <- DELEGATE TypeName Identifier OPEN_PAREN Parameters CLOSE_PAREN SEMICOLON
Enum <- ENUM Identifier OPEN_CURLY EnumFields CLOSE_CURLY SEMICOLON
Interface <- INTERFACE Identifier OPEN_CURLY CLOSE_CURLY 
RuntimeClass <- RUNTIME_CLASS Identifier OPEN_CURLY CLOSE_CURLY 
Struct <- STRUCT Identifier OPEN_CURLY StructFields CLOSE_CURLY SEMICOLON

EnumFields <- EnumField (COMMA EnumField)*
EnumField <- Identifier (EQUAL IntConstant)?
Parameters <- Parameter (COMMA Parameter)*
Parameter <- TypeName Identifier
StructFields <- StructField+
StructField <- TypeName Identifier SEMICOLON

SimpleType <- INT16 / INT32 / INT64 / 
	UINT8 / UINT16 / UINT32 / UINT64 /
	CHAR / STRING / SINGLE / DOUBLE / BOOLEAN / GUID
	
# Lexical syntax 
NAMESPACE <- 'namespace' Spacing
DELEGATE <- 'delegate' Spacing
ENUM <- 'enum' Spacing
INTERFACE <- 'interface' Spacing 
RUNTIME_CLASS <- 'runtimeclass' Spacing
STRUCT <- 'struct' Spacing

INT16 <- 'Int16' Spacing
INT32 <- 'Int32' Spacing
INT64 <- 'Int64' Spacing
UINT8 <- 'UInt8' Spacing
UINT16 <- 'UInt16' Spacing
UINT32 <- 'UInt32' Spacing
UINT64 <- 'UInt64' Spacing
CHAR <- 'Char' Spacing
STRING <- 'String' Spacing
SINGLE <- 'Single' Spacing
DOUBLE <- 'Double' Spacing
BOOLEAN <- 'Boolean' Spacing
GUID <- 'Guid' Spacing
OBJECT <- 'Object' Spacing

OPEN_PAREN <- '(' Spacing
OPEN_CURLY <- '{' Spacing
OPEN_ANGLE <- '<' Spacing
OPEN_SQUARE <- '[' Spacing
CLOSE_PAREN <- ')' Spacing
CLOSE_CURLY <- '}' Spacing
CLOSE_ANGLE <- '>' Spacing
CLOSE_SQUARE <- ']' Spacing

COMMA <- ',' Spacing 
SEMICOLON <- ';' Spacing 
PERIOD <- '.' Spacing
EQUAL <- "=" Spacing

IntConstant <- '-'? [0-9]+ / '0x' [0-9A-Fa-f]+ 
TypeName <- Identifier
DottedIdentifier <- Identifier ('.' Identifier)*
Identifier <- IdentStart IdentCont* Spacing 
IdentStart <- [a-zA-Z_] 
IdentCont <- IdentStart / [0-9]
Literal <- ['] (!['] Char)* ['] Spacing / ["] (!["] Char)* ["] Spacing 
Class <- '[' (!']' Range)* ']' Spacing 
Range <- Char '-' Char / Char 
Char <- '\\' [nrt'"\[\]\\] / '\\' [0-2][0-7][0-7] / '\\' [0-7][0-7]? / !'\\' .

Spacing <- (Space / Comment)* 
Comment <- '//' (!EndOfLine .)* EndOfLine 
Space <- ' ' / '\t' / EndOfLine 
EndOfLine <- '\r\n' / '\n' / '\r' 
EndOfFile <- !. 
